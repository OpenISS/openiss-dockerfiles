FROM ubuntu:18.04

RUN apt-get update --fix-missing && apt-get upgrade -y

RUN DEBIAN_FRONTEND=noninteractive \
    apt-get install -y --no-install-recommends --fix-missing gnupg wget build-essential bash cmake gcc git make \
    xserver-xorg-dev libx11-dev libgl1-mesa-dev libglew-dev libglfw3-dev libglm-dev \
    && apt-get clean

WORKDIR /usr/src/sdkbase

RUN apt-get update && apt-get install -y --reinstall ca-certificates

RUN apt-get -y install python3-pip && apt-get install -y freeglut3-dev

RUN apt install -y build-essential cmake git pkg-config libgtk-3-dev \
libavcodec-dev libavformat-dev libswscale-dev libv4l-dev \
libxvidcore-dev libx264-dev libjpeg-dev libpng-dev libtiff-dev \
gfortran openexr libatlas-base-dev python3-dev python3-numpy \
libtbb2 libtbb-dev libdc1394-22-dev libopenexr-dev \
libgstreamer-plugins-base1.0-dev libgstreamer1.0-dev

RUN mkdir opencv_build 
WORKDIR opencv_build
RUN git clone --depth 1 -b 3.4 https://github.com/opencv/opencv.git
WORKDIR opencv
RUN mkdir -p build
WORKDIR build
RUN cmake -D CMAKE_BUILD_TYPE=RELEASE \
-D CMAKE_INSTALL_PREFIX=/usr/local \
-D INSTALL_C_EXAMPLES=OFF \
-D INSTALL_PYTHON_EXAMPLES=OFF \
-D OPENCV_GENERATE_PKGCONFIG=ON \
-D BUILD_EXAMPLES=OFF ..
RUN make
RUN make install

RUN make clean && apt-get clean

RUN apt-get update \
  && apt-get -y install build-essential \
  && apt-get install -y wget \
  && rm -rf /var/lib/apt/lists/* \
  && wget https://github.com/Kitware/CMake/releases/download/v3.20.0/cmake-3.20.0-Linux-x86_64.sh \
      -q -O /tmp/cmake-install.sh \
      && chmod u+x /tmp/cmake-install.sh \
      && mkdir /opt/cmake-3.20.0 \
      && /tmp/cmake-install.sh --skip-license --prefix=/opt/cmake-3.20.0 \
      && rm /tmp/cmake-install.sh \
      && ln -s /opt/cmake-3.20.0/bin/* /usr/local/bin

RUN make clean && apt-get clean

RUN apt update && apt upgrade -y \
    && apt-get install -y software-properties-common git-core \
    && apt update && apt upgrade -y \
    && add-apt-repository ppa:ubuntu-toolchain-r/test \
    && apt-get update && apt-get install -y gcc-9 g++-9 \
    && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 90 --slave /usr/bin/g++ g++ /usr/bin/g++-9 --slave /usr/bin/gcov gcov /usr/bin/gcov-9 \
    && apt-get clean

WORKDIR ../../.. 

RUN mkdir openiss

WORKDIR openiss

COPY openiss .

WORKDIR openedet

RUN apt-get install -y zip unzip \
    && apt-get clean

RUN wget https://bitbucket.org/Eric94/openedet/downloads/models.zip \
    && rm -rf models \
    && unzip models.zip \
    && rm -rf models.zip 

RUN mkdir build
WORKDIR build
RUN cmake -DEDET_BUILD_EXAMPLES=OFF .. 
RUN make

WORKDIR ../../src/api/cpp
RUN mkdir build
RUN cmake -S . -B build
RUN cmake --build build

WORKDIR build/examples/openedet

CMD /bin/bash
